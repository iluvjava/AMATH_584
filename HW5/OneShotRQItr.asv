function [EigenValues, EigenVectors, Flag] = OneShotRQItr(A, v0, maxItr, tol, subspaceProj)
    % Rayleigh Quotients interations subroutines. 
    %

    switch nargin
        case 2
            maxItr = 100; 
            tol    = 1e-6;
            subspaceProj = zeros(size)
        case 3
            tol    = 1e-6; 
        case 4
            % bruh
        case 5
            
            
    end
    
    
    import java.util.ArrayList;
    v            = v0./norm(v0);
    l            = v'*A*v;
    I            = eye(size(A));
   
    EigenValues  = ArrayList();
    EigenVectors = ArrayList();
    
    EigenValues.add(l); 
    EigenVectors.add(v);
    
    for II = 1: maxItr
       w = (A - l.*I)\v;
       v = w./norm(w);
       l = v'*A*v;
       EigenValues.add(l);
       EigenVectors.add(v);
       if norm(RayleighQ(v)) < tol
           disp("Oneshot Inverse RQ Iterations converged to TOL. "); 
           Flag = 0;
           return;
       end
    end
    disp("Oneshot Inverse RQ Iterations failed to converge after maxitr.");
    Flag = 1;
    function R = RayleighQ(x)
        R = (A*x - (x'*A*x)*x);
    end
    
end